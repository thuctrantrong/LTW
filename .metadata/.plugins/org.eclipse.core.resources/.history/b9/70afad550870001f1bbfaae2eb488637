package vn.iostar.dao.ipl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import vn.iostar.configs.DBconnect;
import vn.iostar.dao.iuserdao;
import vn.iostar.model.Usermodel;

public class USerDaoImpl extends DBconnect implements iuserdao {

	public Connection conn = null;
	public PreparedStatement ps = null;
	public ResultSet rs = null;

	@Override
	public List<Usermodel> findAll(){
		String sql = "select * from Table_info";
		List<Usermodel> list = new ArrayList<>();
		try {
			conn = super.getConnection();
			ps = conn.prepareStatement(sql);
			rs = ps.executeQuery();
		while (rs.next()) {
			int userId = rs.getInt("id");
            String username = rs.getString("username");
            String password = rs.getString("password");
            String imagines = rs.getString("imagines");
            String fullname = rs.getString("fullname");
            String email = rs.getString("email");
            String phone = rs.getString("phone");
            int roleid = rs.getInt("roleid");
            String createDate = rs.getString("createDate");
            Usermodel user = new Usermodel(userId,username,password,imagines,fullname,email,phone,roleid,createDate);
	        list.add(user);
		}
		
		}catch(Exception e) {
			
		}
		
		return list; 
	}

	@Override
	public Usermodel findById(int id) {
		String findsql = "select * from Table_info where id = ?";			
		Usermodel user = null ; 
		try {
			conn = super.getConnection();
			ps = conn.prepareStatement(findsql);
			ps.setInt(1, id);
			rs = ps.executeQuery();

			while (rs.next()) {
				int userId = rs.getInt("id");
	            String username = rs.getString("username");
	            String password = rs.getString("password");
	            String imagines = rs.getString("imagines");
	            String fullname = rs.getString("fullname");
	            String email = rs.getString("email");
	            String phone = rs.getString("phone");
	            int roleid = rs.getInt("roleid");
	            String createDate = rs.getString("createDate");
	            user = new Usermodel(userId,username,password,imagines,fullname,email,phone,roleid,createDate);
			}
		} catch (Exception e) {
			
		}
		return  user ;  
	}

	@Override
	public void insert(Usermodel user) {

		String insertsql = "INSERT INTO Table_info (id, username, password, imagines, fullname,email,phone,roleid,createDate) VALUES (?, ?, ?, ?, ?,?,?,?,?);";
		try {
			conn = super.getConnection();
			ps = conn.prepareStatement(insertsql);
			ps.setInt(1, user.getId());   
			ps.setString(2, user.getUsername());         
            ps.setString(3, user.getPassword());    
            ps.setString(4, user.getImagines());        
            ps.setString(5, user.getFullname());
			ps.setString(6, user.getEmail());         
			ps.setString(7, user.getPhone());         
			ps.setInt(8, user.getRoleid());      
			ps.setString(9, user.getCreateDate());         


            
            ps.executeUpdate();

            System.out.println("User inserted successfully!");
		}catch(Exception ex)
		{
			ex.printStackTrace();
		}
	}
	 public static void main(String[] args) {
		 USerDaoImpl usdi = new USerDaoImpl();
		 Usermodel userfind = usdi.findById(1);
		 if (userfind != null)
		 {
			 System.out.println("User found: " + userfind.toString());
		 }
		 else 
		 {
			 System.out.println("User not found");
		 }
		 
		 List<Usermodel> list = usdi.findAll();
		 for (Usermodel userlist : list) {
	            System.out.println(userlist);
	        }
		 
	    }

	@Override
	public Usermodel findByUserName(String username) {
		String findsql = "select * from Table_info where id = ?";			
		Usermodel user = null ; 
		try {
			conn = super.getConnection();
			ps = conn.prepareStatement(findsql);
			ps.setInt(1, id);
			rs = ps.executeQuery();

			while (rs.next()) {
				int userId = rs.getInt("id");
	            String username = rs.getString("username");
	            String password = rs.getString("password");
	            String imagines = rs.getString("imagines");
	            String fullname = rs.getString("fullname");
	            String email = rs.getString("email");
	            String phone = rs.getString("phone");
	            int roleid = rs.getInt("roleid");
	            String createDate = rs.getString("createDate");
	            user = new Usermodel(userId,username,password,imagines,fullname,email,phone,roleid,createDate);
			}
		} catch (Exception e) {
			
		}
		return  user ;  
	}

}