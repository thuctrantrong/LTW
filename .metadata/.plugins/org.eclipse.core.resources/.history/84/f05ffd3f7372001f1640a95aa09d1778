package vn.iostar.dao.ipl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import vn.iostar.configs.DBconnect;
import vn.iostar.dao.iuserdao;
import vn.iostar.model.Usermodel;

public class USerDaoImpl extends DBconnect implements iuserdao {

	public Connection conn = null;
	public PreparedStatement ps = null;
	public ResultSet rs = null;

	@Override
	public List<Usermodel> findAll() {
		String sql = "select * from Table_info";
		List<Usermodel> list = new ArrayList<>();
		try {
			conn = super.getConnection();
			ps = conn.prepareStatement(sql);
			rs = ps.executeQuery();
			while (rs.next()) {
				String userId = rs.getString("id");
				String username = rs.getString("username");
				String password = rs.getString("password");
				String imagines = rs.getString("imagines");
				String fullname = rs.getString("fullname");
				String email = rs.getString("email");
				String phone = rs.getString("phone");
				String roleid = rs.getString("roleid");
				String createDate = rs.getString("createDate");
				Usermodel user = new Usermodel(userId, username, password, imagines, fullname, email, phone, roleid,
						createDate);
				list.add(user);
			}

		} catch (Exception e) {

		}

		return list;
	}

	@Override
	public Usermodel findById(int id) {
		String findsql = "select * from Table_info where id = ?";
		Usermodel user = null;
		try {
			conn = super.getConnection();
			ps = conn.prepareStatement(findsql);
			ps.setInt(1, id);
			rs = ps.executeQuery();

			while (rs.next()) {
				String userId = rs.getString("id");
				String username = rs.getString("username");
				String password = rs.getString("password");
				String imagines = rs.getString("imagines");
				String fullname = rs.getString("fullname");
				String email = rs.getString("email");
				String phone = rs.getString("phone");
				String roleid = rs.getString("roleid");
				String createDate = rs.getString("createDate");
				user = new Usermodel(userId, username, password, imagines, fullname, email, phone, roleid, createDate);
			}
		} catch (Exception e) {

		}
		return user;
	}

	@Override
	public boolean insert(Usermodel user) {

		String insertsql = "INSERT INTO Table_info (username, password, imagines, fullname,email,phone,roleid,createDate) VALUES ( ?, ?, ?, ?,?,?,?,?);";
		try {
			conn = super.getConnection();
			ps = conn.prepareStatement(insertsql);
			ps.setString(1, user.getUsername());
			ps.setString(2, user.getPassword());
			ps.setString(3, user.getImagines());
			ps.setString(4, user.getFullname());
			ps.setString(5, user.getEmail());
			ps.setString(6, user.getPhone());
			ps.setString(7, user.getRoleid());
			ps.setString(8, user.getCreateDate());
			ps.executeUpdate();
			System.out.println("User inserted successfully!");
			return true ;
		} catch (Exception ex) {
			ex.printStackTrace();
		}
		return false;
	}
	
	  public static void main(String[] args) { USerDaoImpl usdi = new
	  USerDaoImpl(); Usermodel userfind = usdi.findByUserName("a"); if (userfind !=
	  null) { System.out.println("User found: " + userfind.toString()); } else {
	  System.out.println("User not found"); }
	  
	  
	  }
	 

	@Override
	public Usermodel findByUserName(String usernamefind) {
		String findsql = "select * from Table_info where username = ?";

		try {
			conn = super.getConnection();
			ps = conn.prepareStatement(findsql);
			ps.setString(1, usernamefind);
			rs = ps.executeQuery();

			while (rs.next()) {

				String userId = rs.getString("id");
				String username = rs.getString("username");
				String password = rs.getString("password");
				String imagines = rs.getString("imagines");
				String fullname = rs.getString("fullname");
				String email = rs.getString("email");
				String phone = rs.getString("phone");
				String roleid = rs.getString("roleid");
				String createDate = rs.getString("createDate");
				Usermodel user = new Usermodel(userId, username, password, imagines, fullname, email, phone, roleid,
						createDate);
				return user;
			}
		} catch (Exception e) {
			e.printStackTrace();

		}
		return null;
	}

}